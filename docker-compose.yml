version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: risq_postgres
    environment:
      POSTGRES_DB: risq_db
      POSTGRES_USER: risq_user
      POSTGRES_PASSWORD: risq_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"  # Changed from 5432 to 5433 to avoid conflict
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U risq_user -d risq_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - risq-network

  # Redis Cache & Session Store
  redis:
    image: redis:7-alpine
    container_name: risq_redis
    ports:
      - "6380:6379"  # Changed from 6379 to 6380 to avoid conflict
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - risq-network

  # NATS Message Broker for Event-Driven Architecture
  nats:
    image: nats:2.10-alpine
    container_name: risq_nats
    ports:
      - "4222:4222"
      - "8222:8222"  # HTTP monitoring
      - "6222:6222"  # Clustering
    command: ["--jetstream", "--store_dir=/data", "--http_port=8222"]
    volumes:
      - nats_data:/data
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "4222"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - risq-network

  # Application Backend
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: risq_api
    environment:
      - APP_HOST=0.0.0.0
      - APP_PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=risq_user
      - DB_PASSWORD=risq_password
      - DB_NAME=risq_db
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - NATS_URL=nats://nats:4222
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - OPENAI_MODEL=${OPENAI_MODEL:-gpt-4o-mini}
      - OPENAI_TEMPERATURE=${OPENAI_TEMPERATURE:-0.3}
      - OPENAI_MAX_TOKENS=${OPENAI_MAX_TOKENS:-1000}
      - JWT_SECRET=${JWT_SECRET:-your_super_secure_jwt_secret_key_change_in_production}
      - JWT_EXPIRES_IN=${JWT_EXPIRES_IN:-24h}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      nats:
        condition: service_healthy
    networks:
      - risq-network
    restart: unless-stopped
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  nats_data:
    driver: local

networks:
  risq-network:
    driver: bridge